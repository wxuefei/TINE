SECTION .text
GLOBAL FFI_CALL_TOS_0
FFI_CALL_TOS_0:
PUSH RBP
MOV RBP,RSP;save current stack
AND RSP,-0x10 ;This will chop off the first hex digit to align to 16(stack grows down so doesnt mess up stack)
PUSH RAX ;Align to 16 because when i push rbx itd be rsp â‰… 16 (mod 8)
PUSH RBX ;mandatory register to be saved in win32 abi
         ;why i dont save other registers: Terry's compiler pushes
         ;rdi,rsi,r12~r15 when it uses them anyway(not rbx)
         ;maybe terry did have some ffi in mind or something(idk)
CALL RCX ;1st argument in win32 abi
POP RBX
LEAVE
RET

;we dont push rax for functions with an even number of args
GLOBAL FFI_CALL_TOS_1
FFI_CALL_TOS_1:
PUSH RBP
MOV RBP,RSP
AND RSP,-0x10
PUSH RBX
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

GLOBAL FFI_CALL_TOS_2
FFI_CALL_TOS_2:
PUSH RBP
MOV RBP,RSP
AND RSP,-0x10
PUSH RAX ; Align to 16
PUSH RBX
PUSH R8
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

GLOBAL FFI_CALL_TOS_3
FFI_CALL_TOS_3:
PUSH RBP
MOV RBP,RSP
AND RSP,-0x10
PUSH RBX
PUSH R9
PUSH R8
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

; https://archive.md/4HDA0
; Fist stack arg:0x30
; R9 HOME+0x28 
; R8 HOME+0x20
; RDX HOME+0x18
; RCX HOME+0x10
; RET ADDR+8
; RBP
GLOBAL FFI_CALL_TOS_4
FFI_CALL_TOS_4:
PUSH RBP
MOV RBP,RSP
AND RSP,-0x10
PUSH RAX ; align to 16
PUSH RBX
PUSH QWORD [RBP+0x30]
PUSH R9
PUSH R8
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

GLOBAL FFI_CALL_TOS_5
FFI_CALL_TOS_5:
PUSH RBP
MOV RBP, RSP
AND RSP, -0x10
PUSH RBX
PUSH QWORD [RBP + 0x38]
PUSH QWORD [RBP + 0x30]
PUSH R9
PUSH R8
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

GLOBAL FFI_CALL_TOS_6
FFI_CALL_TOS_6:
PUSH RBP
MOV RBP, RSP
AND RSP, -0x10
PUSH RBX
PUSH RAX ; 16 Align
PUSH QWORD [RBP + 0x40]
PUSH QWORD [RBP + 0x38]
PUSH QWORD [RBP + 0x30]
PUSH R9
PUSH R8
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

GLOBAL FFI_CALL_TOS_7
FFI_CALL_TOS_7:
PUSH RBP
MOV RBP, RSP
AND RSP, -0x10
PUSH RBX
PUSH QWORD [RBP + 0x48]
PUSH QWORD [RBP + 0x40]
PUSH QWORD [RBP + 0x38]
PUSH QWORD [RBP + 0x30]
PUSH R9
PUSH R8
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

GLOBAL FFI_CALL_TOS_8
FFI_CALL_TOS_8:
PUSH RBP
MOV RBP, RSP
AND RSP, -0x10
PUSH RBX
PUSH RAX ; 16 Align
PUSH QWORD [RBP + 0x50]
PUSH QWORD [RBP + 0x48]
PUSH QWORD [RBP + 0x40]
PUSH QWORD [RBP + 0x38]
PUSH QWORD [RBP + 0x30]
PUSH R9
PUSH R8
PUSH RDX
CALL RCX
POP RBX
LEAVE
RET

GLOBAL FFI_CALL_TOS_0_ZERO_BP
FFI_CALL_TOS_0_ZERO_BP:
PUSH RBP
PUSH RBX
PUSH 0 ;Align stack to 16
PUSH 0 ;"Empty enter function"
PUSH 0 ;"old RBP"
MOV RBP,RSP
CALL RCX
ADD RSP,24
POP RBX
POP RBP
RET
